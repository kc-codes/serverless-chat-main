# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: serverless-chat
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs20.x
  lambdaHashingVersion: 20201221

  environment:
    WSSAPIGATEWAYENDPOINT:
      Fn::Join:
        - ""
        - - Ref: WebsocketsApi
          - ".execute-api."
          - Ref: AWS::Region
          - ".amazonaws.com/${sls:stage}"

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
          Resource:
            - { "Fn::GetAtt": ["ClientsTable", "Arn"] }
        - Effect: Allow
          Action:
            - "dynamodb:Query"
          Resource:
            Fn::Join:
              - "/"
              - - { "Fn::GetAtt": ["ClientsTable", "Arn"] }
                - "index"
                - "*"
        - Effect: Allow
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Scan"
          Resource:
            - { "Fn::GetAtt": ["MessagesTable", "Arn"] }
        - Effect: Allow
          Action:
            - "dynamodb:Query"
          Resource:
            Fn::Join:
              - "/"
              - - { "Fn::GetAtt": ["MessagesTable", "Arn"] }
                - "index"
                - "*"

functions:
  websocketHandler:
    handler: src/handler.handle
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
      - websocket:
          route: getMessages
      - websocket:
          route: sendMessage
      - websocket:
          route: getClients

plugins:
  - serverless-plugin-typescript

resources:
  Resources:
    ClientsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Clients
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: connectionId
            AttributeType: S
          - AttributeName: nickname
            AttributeType: S
        KeySchema:
          - AttributeName: connectionId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: NicknameIndex
            KeySchema:
              - AttributeName: nickname
                KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            Projection:
              ProjectionType: "ALL"
    MessagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Messages
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: messageId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: N
          - AttributeName: nicknameToNickname
            AttributeType: S
        KeySchema:
          - AttributeName: messageId
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: NicknameToNicknameIndex
            KeySchema:
              - AttributeName: nicknameToNickname
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            Projection:
              ProjectionType: "ALL"
